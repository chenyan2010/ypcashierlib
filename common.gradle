boolean isApplication() {
    return project.plugins.findPlugin("com.android.application") != null;
}

boolean checkProperty(String propname) {
    if(project.hasProperty(propname)) {
        return true
    }
    throw new RuntimeException("'" + propname + "' is undefined in module: " + project.getName())
}

android {
    compileSdkVersion 25
    buildToolsVersion "25.0.3"

    if(isApplication()) {
        signingConfigs {
            release {
            }
        }
    }

    defaultConfig {
        if(isApplication()) {
            checkProperty("appId")
            applicationId appId
        }

        minSdkVersion 14
        targetSdkVersion 21
        checkProperty("verCode")
        versionCode verCode
        checkProperty("verName")
        versionName verName

        javaCompileOptions {
            annotationProcessorOptions {
                arguments = [ moduleName : project.getName() ]
            }
        }

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }

    if(isApplication()) {
        if(project.hasProperty("loadSigningConfigs")) {
            loadSigningConfigs()
        }
    }

    buildTypes {
        debug {
            minifyEnabled false
            if(isApplication()) {
                signingConfig signingConfigs.release
            }
        }
        release {
            minifyEnabled true
            if(isApplication()) {
                signingConfig signingConfigs.release
            }
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    testCompile 'junit:junit:4.12'
    compile 'com.alibaba:arouter-api:1.2.4'
    annotationProcessor 'com.alibaba:arouter-compiler:1.1.4'
}
